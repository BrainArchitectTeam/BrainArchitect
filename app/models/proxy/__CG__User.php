<?php

namespace Proxy\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getActivationKey()
    {
        $this->__load();
        return parent::getActivationKey();
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function getFullname()
    {
        $this->__load();
        return parent::getFullname();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function getRegisteredDateTime()
    {
        $this->__load();
        return parent::getRegisteredDateTime();
    }

    public function getResetRequestTime()
    {
        $this->__load();
        return parent::getResetRequestTime();
    }

    public function getSurname()
    {
        $this->__load();
        return parent::getSurname();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function isActive()
    {
        $this->__load();
        return parent::isActive();
    }

    public function isBanned()
    {
        $this->__load();
        return parent::isBanned();
    }

    public function isAdministrator()
    {
        $this->__load();
        return parent::isAdministrator();
    }

    public function activate()
    {
        $this->__load();
        return parent::activate();
    }

    public function ban()
    {
        $this->__load();
        return parent::ban();
    }

    public function deactivate()
    {
        $this->__load();
        return parent::deactivate();
    }

    public function registeredNow()
    {
        $this->__load();
        return parent::registeredNow();
    }

    public function setActivationKey($key)
    {
        $this->__load();
        return parent::setActivationKey($key);
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function setPasswordHash($passwordHash)
    {
        $this->__load();
        return parent::setPasswordHash($passwordHash);
    }

    public function setResetRequestNow()
    {
        $this->__load();
        return parent::setResetRequestNow();
    }

    public function setSurname($surname)
    {
        $this->__load();
        return parent::setSurname($surname);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function unban()
    {
        $this->__load();
        return parent::unban();
    }

    public function unsetResetRequestTime()
    {
        $this->__load();
        return parent::unsetResetRequestTime();
    }

    public function setAdminRole()
    {
        $this->__load();
        return parent::setAdminRole();
    }

    public function unsetAdminRole()
    {
        $this->__load();
        return parent::unsetAdminRole();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'active', 'isAdministrator', 'ban', 'registered', 'resetRequestTime', 'username', 'email', 'name', 'surname', 'password', 'activation_key');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}